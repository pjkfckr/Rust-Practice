
// Tuple

// - 튜플은 하나의 레코드 유형이며, 레코드는 종이에 적힌 한 줄의 정보라고 생각할 수 있습니다.
// - 튜플은 그 줄 혹은 그 레코드 안의 각 데이터 조각에 접근 하는 하나의 방식입니다.
// - 튜플은 데이터의 익명으로 저장하며, 튜플의 필드에 이름을 붙일 필요는 없습니다.
// - 구조체나 열거형의 필드 혹은 열것값에 각각의 이름을 부여한 것과는 다르죠
// - 튜플은 함수에서 데이터 쌍을 리턴할 때 유용하며, 손쉽게 변수로 해체될 수 있습니다

// Example
enum Access {
    Full,
}

fn one_two_three() -> (i32, i32, i32) {
    (1, 2, 3)
}


fn main() {
    let numbers = one_two_three();
    let (x, y, z) = one_two_three();
    println!("{:?}, {:?}", x, numbers.0);
    println!("{:?}, {:?}", y, numbers.1);
    println!("{:?}, {:?}", z, numbers.2);

    let (employee, access) = ("Jake", Access::Full);
}

// Recap
// - 튜플은 익명의 데이터 접근을 허용하며, 여러 변수로 정보를 해체할 때 유용하며,
// - 필드를 원하는 만큼 포함할 수 있습니다.
// - 하지만 두세 개 이상의 필드로 작업할 때는 구조체를 사용하는 게 좋습니다